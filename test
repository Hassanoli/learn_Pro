--Assignment07
Use ITI

--1 Create a scalar function that takes a date and returns the Month name of that date.
create function GetMonthName (@InputDate Date)
returns varchar(20) --with s return
as
begin
return DateName(MONTH,@InputDate)
end

SELECT dbo.GetMonthName('7-6-2003');  --  MM DD YYYY should insert with this format

-- 2 Create a multi-statements table-valued function that takes 2 integers and returns the values between them.
create function getnumbersbetween
(
    @start int,
    @end int
)
returns @numbers table (number int)
as
begin
    while @start <= @end
    begin
        insert into @numbers values (@start);
        set @start = @start + 1;
    end

    return;
end;

select  * FROM dbo.GetNumbersBetween(1,5);  -- I have to attend the workshop because I tried a lot and I didn't know how to do it, so I got it from Documentation Sql.

-- 3. Create a table-valued function that takes Student No and returns Department Name with Student full name.
go
create function GetStudentAndDepartmentInfo(@StudentId int)
returns @Result table  --with s
(
StudnetFullName varchar(50) , 
DepartmentName varchar(20)
)
as
begin
insert into @Result --insert based on select
select 
CONCAT_WS(' ', s.St_Fname, s.St_Lname) AS StudentFullName,
d.Dept_Name AS DepartmentName
from Student s
join Department d ON s.Dept_Id = d.Dept_Id
where s.St_Id = @StudentId
return 
end

select * from dbo.GetStudentAndDepartmentInfo(6);

--4 Create a scalar function that takes Student ID and returns a message to the user. 
-- same thing in demo (use if)  after search i found iam should use set for declare custom message
create function GetStudentNameStatus(@StudentId int)
returns varchar(100)
as
begin
    declare @Fname varchar(50)
    declare @Lname varchar(50)
    declare @Message varchar(100)

    select 
        @Fname = St_Fname,
        @Lname = St_Lname
    from Student
    where St_Id = @StudentId

    if @Fname is null and @Lname is null
        set @Message = 'First name & last name are null.'
    else if @Fname is null
        set @Message = 'First name is null.'
    else if @Lname is null
        set @Message = 'Last name is null.'
    else
        set @Message = 'First name & last name are not null.'

    return @Message
end;

select * from Student --test 13,

select dbo.GetStudentNameStatus(13);

--5 
/*Create a function that takes an integer
which
represents the format of the Manager hiring date and displays department name,
Manager Name and hiring date with this format.*/

--after search iam discuss ti using case 
-- to if press 1 yyyy-mm-dd and if press 2 dd/mm/yyyy if press 3 Month day, year and handle it with when 

Create Function GetManagerHireDateFormatted(@Format INT)
Returns @Result Table (
DepartmentName VARCHAR(50),
ManagerName VARCHAR(100),
FormattedHireDate VARCHAR(50)
)
As
Begin
Insert Into @Result
Select 
d.Dept_Name,
i.Ins_Name,
Case 
When @Format = 1 Then Convert(VARCHAR(10), d.Manager_hiredate, 120) -- yyyy-mm-dd
When @Format = 2 Then Format(d.Manager_hiredate, 'dd/MM/yyyy')      -- dd/mm/yyyy
When @Format = 3 Then Format(d.Manager_hiredate, 'MMMM dd, yyyy')   -- Month day, year
Else 'Invalid format'
End
From Department d
Join Instructor i On d.Dept_Manager = i.Ins_Id

Return
End

select * from dbo.GetManagerHireDateFormatted(1);  
select * from dbo.GetManagerHireDateFormatted(2);  
select * from dbo.GetManagerHireDateFormatted(3);

SELECT * FROM dbo.CheckStudentNameStatus('5')






